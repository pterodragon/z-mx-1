#!/bin/sh

usage() {
cat << EOF
Usage: z.config [OPTIONS] PREFIX

Options:
    -a ARCH	specify architecture (default: 64)
    -t PATH	specify third party libs path (default: /usr/local32
		  for 32 bit and /usr/local for 64 bit)
    -c		force re-configure
    -d		debug build (default: release) 
    -M		build for MinGW-w64
    -l		pass --enable-libtool-lock to configure
EOF
}

ARCH=64
OPREFIX=
CONFIG=0
DEBUG=0
MINGW=0
CMAKE=0
CM_MIPS64=0
CM_X86_64=0
CM_VERBOSE=0
LIBTOOL_LOCK=""

while getopts "a:z:t:cdMlh" arg
do case $arg in
  a) ARCH=$OPTARG;;
  z|t) OPREFIX=$OPTARG;;
  c) CONFIG=1;;
  d) DEBUG=1;;
  M) MINGW=1;;
  l) LIBTOOL_LOCK="--enable-libtool-lock";;
  h) usage; exit 0;;
esac; done
shift $(($OPTIND - 1))

PREFIX=$1
[ -z "$PREFIX" ] && { usage; exit 1; }

OPTFLAGS="-fno-math-errno -fno-trapping-math -fno-rounding-math -fno-signaling-nans"

if [ $DEBUG -eq 1 ]; then
  CM_BUILD="Debug"
  OPTFLAGS="-g -m$ARCH $OPTFLAGS"
  FLAGS="-DZDEBUG"
else
  CM_BUILD="Release"
  OPTFLAGS="-g -m$ARCH -O6 -mtune=haswell $OPTFLAGS"
  FLAGS="-DNDEBUG"
fi

[ $MINGW -eq 1 ] && {
  [ -z "$OPREFIX" ] && OPREFIX="$PREFIX"
  OPTFLAGS="$OPTFLAGS -mstackrealign"
  case "$ARCH" in
    32) BUILD="--build=i686-w64-mingw32";;
    64) BUILD="--build=x86_64-w64-mingw32";;
    *) usage;;
  esac
}

case "$ARCH" in
  32) [ -z "$OPREFIX" ] && OPREFIX="/usr/local32";;
  64) [ -z "$OPREFIX" ] && OPREFIX="/usr/local";;
  *) usage;;
esac

cmake_() {
  mkdir -p build/$1
  cd build/

  # build options for the host side
  echo "set(CMAKE_LIBRARY_PATH $OPREFIX)" >> ${1}.cmake
  echo "set(WITH_PREFIX $PREFIX)" >> ${1}.cmake
  echo "set(VERBOSE_BUILD $CM_VERBOSE)" >> ${1}.cmake
  echo "set(CMAKE_BUILD_TYPE $CM_BUILD)" >> ${1}.cmake

  cd $1
  cmake ../../ -DTARGET=$1
  [ $? -ne 0 ] && exit 1
  cd ../../
  echo "To Build: cd build/$1; make"
}

[ $CMAKE -eq 1 ] && {
  rm -rf ./build
  [ $CM_MIPS64 -eq 1 ] && cmake_ mips64
  [ $CM_X86_64 -eq 1 ] && cmake_ x86_64
  exit 0
}

[ $CONFIG -eq 1 ] && {
  touch configure.ac
  autoreconf -f -i
}

FLAGS="-std=gnu++17 $OPTFLAGS $FLAGS"

./configure $BUILD "--disable-static" "--prefix=$PREFIX" "--with-pcre=$OPREFIX" "--with-readline=$OPREFIX" "--with-hwloc=$OPREFIX" "--with-ck=$OPREFIX" "CFLAGS=$FLAGS" "CXXFLAGS=$FLAGS" "$LIBTOOL_LOCK"
